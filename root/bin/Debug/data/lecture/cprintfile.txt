Printing from file

Sometimes, you will already have a set of data stored in a file on your computer. All we have to do is tell our program to access it. But how?

How to print from a file

To print from a file, first we have to see it, then open it, then read from it. We'll first see an example that does all of this and then learn how it works.

#include <stdio.h>

int main () {
    char fileInput[100];
    FILE *file;
    file = fopen("text.txt", "r");
    fscanf(file, "%s", fileInput);
    fclose(file);
    printf("%s", fileInput);
    return 0;
}

Let's see what some of these lines mean.

FILE *file - We declare a variable of type FILE. This will allow us to access the file using a function. Don't worry about '*' for now. We'll explain it later.
file = fopen("text.txt", "r") - fopen() is a function that allows us to open a file. The first parameter is the name of the file. Don't forget to add it's extension as well. The second parameter is an option of the function. "r" means read mode, meaning we can only read from the file, we aren't allowed to modify it. Then we store the address of the file in our variable.
fscanf(file, "%s", fileInput) - fscanf() takes input from a file and stores it in a variable. The first argument is the variable in which we stored the address of our file and the last argument is the variable in which we store the data.
fclose(file) - After we're done with the file it's a good idea to close it. Function fclose() does just that.

If you compile and run the code above, you will see that the input from the file is printed in the console.